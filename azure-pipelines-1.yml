# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches:
   include:
     - windows
variables:
  buildConfiguration: 'Release'
  projectName: 'MyWebApp'
  websiteName: 'MyWebApp'
  appPoolName: 'MyWebApp'
stages:
  - stage: Build_stage
    displayName: Build
    jobs:
      - job:
        displayName: web app
        pool:
          vmImage: windows-latest
        variables:
          BuildConfiguration: Release
        steps:
        - task: DotNetCoreCLI@2
          displayName: restore
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            feedsToUse: 'select'
            
        - task: DotNetCoreCLI@2
          displayName: build
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--configuration $(BuildConfiguration)'
          
        - task: DotNetCoreCLI@2
          displayName: publish
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
            
          
        - task: PublishBuildArtifacts@1
          displayName: PublishBuildArtifacts
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: Container

  
  - stage: 
    displayName: 'Dev'
    dependsOn: 'Build_stage'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/windows'))
    jobs:
     - deployment: Dev
       displayName: Dev
       environment: 
         name: 'window123'    
         resourceType: VirtualMachine
       variables:
       - name: websitePhysicalPath
         value: '%SystemDrive%\inetpub\wwwroot\$(websiteName)'

       strategy:
        runOnce:
          deploy:
            steps: 
         
         
        
         
            - task: IISWebAppManagementOnMachineGroup@0
              inputs:            
                IISDeploymentType: 'IISWebsite'
                ActionIISWebsite: 'CreateOrUpdateWebsite'
                WebsiteName: '$(websiteName)'
                WebsitePhysicalPath: '$(websitePhysicalPath)'
                WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                CreateOrUpdateAppPoolForWebsite: true
                AppPoolNameForWebsite: '$(appPoolName)'
                DotNetVersionForWebsite: 'No Managed Code'
                PipeLineModeForWebsite: 'Integrated'
                AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                AddBinding: true
                Bindings: |
                  {
                      bindings:[
                          {
                              "protocol":"http",
                              "ipAddress":"*",
                              "hostname":"",
                              "port":"9090",
                              "sslThumbprint":"",
                              "sniFlag":false
                          }
                      ]
                  }

            # - task: IISWebAppDeploymentOnMachineGroup@0
            #   inputs:
            #     WebSiteName: '$(websitName)'
            #     Package: \azagent\A1\_work\2\
            
            # - task: IISWebAppDeploymentOnMachineGroup@0
            #   inputs:
            #     WebSiteName: '$(websiteName)'
            #     Package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/$(projectName).zip'
            - task: IISWebAppDeploymentOnMachineGroup@0
              inputs:
                WebSiteName: '$(websitName)'
                Package: '$(Pipeline.Workspace)/drop/**/*.zip'